
#include "/SailSimPlugin/Common.ush"

#define FORCE_SCALE 1000.0

StructuredBuffer<float4> Positions : register(t0);
StructuredBuffer<float4> StripInfo0 : register(t1);
StructuredBuffer<uint2>  StripInfo1 : register(t2);
RWStructuredBuffer<int>  Forces     : register(u0); // packed int xyz

[numthreads(64,1,1)]
void MainCS(uint3 id : SV_DispatchThreadID)
{
    uint sid = id.x;
    if(sid >= NumConstraints) return;

    uint2 idx = StripInfo1[sid];
    uint v0 = idx.x;
    uint v1 = idx.y;

    float area = StripInfo0[sid].w;
    float3 n = float3(0,0,1); // placeholder normal
    float3 lift = 10 * area * n;

    int3 scaled = int3(lift * FORCE_SCALE + 0.5);

    uint base0 = v0*3;
    uint base1 = v1*3;

    int dummy;
    InterlockedAdd(Forces[base0+0], scaled.x, dummy);
    InterlockedAdd(Forces[base0+1], scaled.y, dummy);
    InterlockedAdd(Forces[base0+2], scaled.z, dummy);
    InterlockedAdd(Forces[base1+0], scaled.x, dummy);
    InterlockedAdd(Forces[base1+1], scaled.y, dummy);
    InterlockedAdd(Forces[base1+2], scaled.z, dummy);
}
