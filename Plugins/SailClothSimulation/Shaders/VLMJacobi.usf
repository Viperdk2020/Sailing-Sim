// VLMJacobiCS.usf

RWStructuredBuffer<float4> OutVorticity : register(u0);
StructuredBuffer<float4>   CurrentVorticity : register(t0);
StructuredBuffer<float4>   VelocityField    : register(t1);

cbuffer Params
{
    float RelaxationFactor;
    float DeltaTime;
    uint VertexCount;
};

[numthreads(64,1,1)]
void Main(uint3 DispatchThreadId : SV_DispatchThreadID)
{
    uint idx = DispatchThreadId.x;
    if (idx >= VertexCount)
        return;

    float4 vort = CurrentVorticity[idx];
    float4 vel  = VelocityField[idx];
    // VLM Jacobi iteration (dummy example)
    OutVorticity[idx] = lerp(vort, vel, RelaxationFactor * DeltaTime);
}
